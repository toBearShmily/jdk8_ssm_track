<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--Spring为我们提供了多个ConnectionFactory，有SingleConnectionFactory和CachingConnectionFactory,
    ingleConnectionFactory对于建立JMS服务器链接的请求会一直返回同一个链接，并且会忽略Connection的close方法调用,
    CachingConnectionFactory继承前者，拥有前者所有功能，并可以缓存Session、MessageProducer和MessageConsumer-->

    <!--注入我需要使用的mq事例的包-->
    <context:component-scan base-package="com.sample.activemq_service"/>

    <!--真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
    <bean id="targetConnectionFactory"
          class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>

    <!--Spring用于管理真正的ConnectionFactory的ConnectionFactory-->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
    </bean>


    <!-- 设置消息发送目的地(队列与发布订阅模式) -->
    <!-- 队列(点对点) -->
    <bean id="queueDestination"
          class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>queue</value>
        </constructor-arg>
    </bean>
    <!--主题目的地(一对多)-->
    <bean id="topicDestination"
          class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="topic"/>
    </bean>


</beans>